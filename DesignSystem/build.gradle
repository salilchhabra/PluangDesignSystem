plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}
apply plugin: 'maven-publish'
android {
    namespace 'com.example.designsystem'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.airbnb.android:lottie:3.4.0'
}
def getVersionName = { ->
    return "1.0.1"
}

def getArtificatId = { ->
    return "designsystem"
}
publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.pluang.designsystem' // Replace with group ID
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
            pom.withXml {
                // for dependencies and exclusions
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)

                    // for exclusions
                    if (it.excludeRules.size() > 0) {
                        def exclusions = dependencyNode.appendNode('exclusions')
                        it.excludeRules.each { ExcludeRule ex ->
                            def exclusion = exclusions.appendNode('exclusion')
                            exclusion.appendNode('groupId', ex.group)
                            exclusion.appendNode('artifactId', ex.module)
                        }
                    }
                }
            }
        }
    }
        repositories {
            maven {
                name = "GitHubPackages"
                /** Configure path of your package repository on Github
                 ** Replace GITHUB_USERID with your/organisation Github userID
                 ** and REPOSITORY with the repository name on GitHub
                 */
                url = uri("https://maven.pkg.github.com/salilchhabra/PluangDesignSystem")
                credentials {
                    /** Create github.properties in root project folder file with
                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                     ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                    username = "salilchhabra"
                    password = "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"
                }
            }
        }

}